# version string format -- This will be overwritten later anyway
version: "{build}"

image:
  - Visual Studio 2017
  - Visual Studio 2015

platform:
  - x86
  - x64

configuration:
  - Debug
  - Release

branches:
  only:
    - master

init:
  - git config --global core.autocrlf input
  # Set build version to git commit-hash
  - ps: Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_BRANCH) - $($env:APPVEYOR_REPO_COMMIT)"
  - ps: |
      if ("$env:APPVEYOR_BUILD_WORKER_IMAGE" -eq "Visual Studio 2015") {
          $env:VCVARSALL = "'C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat'"
      } else {
          $env:VCVARSALL = "'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat'"
      }

install:
  # Set up Conan.
  - set PATH=%PATH%;%PYTHON%/Scripts/
  - pip.exe install conan
  - conan user
  - conan --version
  - scripts\set-up-conan.bat

for:
  - matrix:
      only:
        - platform: x64
          configuration: Release
    before_build:
      - fips set config win64-vstudio-release
      - call %VCVARSALL% x64
    environment:
      LIBRARY_ARCHITECTURE: lib64
  - matrix:
      only:
        - platform: x64
          configuration: Debug
    before_build:
      - fips set config win64-vstudio-debug
      - call %VCVARSALL% x64
    environment:
      LIBRARY_ARCHITECTURE: lib64
  - matrix:
      only:
        - platform: x86
          configuration: Release
    before_build:
      - fips set config win32-vstudio-release
      - call %VCVARSALL% x86
    environment:
      LIBRARY_ARCHITECTURE: lib32
  - matrix:
      only:
        - platform: x86
          configuration: Debug
    before_build:
      - fips set config win32-vstudio-debug
      - call %VCVARSALL% x86
    environment:
      LIBRARY_ARCHITECTURE: lib32

build_script:
  - set CTEST_OUTPUT_ON_FAILURE=1
  - fips gen
  - fips make ctest
  # Test the Qt sandbox.
  - C:\Python36\python scripts\generate-distributables.py
  - move alia.hpp examples\qt
  - cd examples\qt
  - mkdir build
  - cd build
  - cmake -G"NMake Makefiles" ..
  - cmake --build .
