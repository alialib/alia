name: Clang

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:

  clang-15:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        config: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - uses: friendlyanon/setup-vcpkg@v1
      with:
        committish: b4624c3a701b11248d88aab08744a37ee7aea1cc
        path: the-vcpkg

    - name: Install System Dependencies
      run: |
        sudo apt update -y
        sudo apt install -y pkg-config autoconf autoconf-archive libgles2-mesa-dev
        sudo pip install gcovr

    - name: Configure
      run: |
        export CC=`which clang-15`
        export CXX=`which clang++-15`
        cmake -Bbuild -DCMAKE_BUILD_TYPE=${{matrix.config}} \
          -D"CMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -DALIA_ENABLE_UI=ON \
          -DALIA_ENABLE_GLFW=OFF \
          . \

    - name: Build
      run: >
        cmake --build build --config ${{matrix.config}}
        --target core_unit_test_runner ui_unit_test_runner -j4

    - name: Test
      run: |
        cd build
        ctest --build-config ${{matrix.config}}

  clang-10:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        config: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - uses: friendlyanon/setup-vcpkg@v1
      with:
        committish: b4624c3a701b11248d88aab08744a37ee7aea1cc
        path: the-vcpkg

    - name: Install
      run: |
        sudo pip install gcovr

    - name: Configure
      run: |
        export CC=`which clang-10`
        export CXX=`which clang++-10`
        cmake -Bbuild -DCMAKE_BUILD_TYPE=${{matrix.config}} \
          -D"CMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -DALIA_ENABLE_UI=OFF \
          .

    - name: Build
      run: >
        cmake --build build --config ${{matrix.config}}
        --target core_unit_test_runner -j4

    - name: Test
      run: |
        cd build
        ctest --build-config ${{matrix.config}}

    - name: Upload coverage reports
      run: |
        bash <(curl -s https://codecov.io/bash) -X gcov -F core \
          -f build/tests/core_coverage.txt
        bash <(curl -s https://codecov.io/bash) -X gcov -F ui \
          -f build/tests/ui_coverage.txt
