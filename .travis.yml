dist: xenial

language: python
python: 3.7

jobs:
  include:

    # The Clang job generates test coverage information.
    - env: CACHE_NAME=clang
      install:
      - sudo bash scripts/set-up-travis.sh
      before_script:
      - export CC=`which clang-4.0`
      - export CXX=`which clang++-4.0`
      script:
      - scripts/do-ci-testing.sh
      after_success:
      - bash <(curl -s https://codecov.io/bash) -X gcov

    # The GCC job deploys alia.hpp releases.
    - env: CACHE_NAME=gcc
      install:
      - sudo bash scripts/set-up-travis.sh
      before_script:
      - export CC=`which gcc`
      - export CXX=`which g++`
      script:
      - scripts/do-ci-testing.sh
      deploy:
      - provider: releases
        api_key:
          secure: "upz/uDNpVnHmK/oe9dSDsK04Z6lEVOgrrM1BZG8tatw/atTREJELXDkuB2eu\
            dkv21tDCRP5YRJYlkRcKrn5bvINk8HcayPXlWhmDiKaT3majietiix1B4V5llSuzbaE\
            dH3cR24122tHoCzGpBxQeon1Vr77za0iWO9t8FkQO/YFeMn/GEU3TUbMMinp5i3WNd4\
            x0Ps9yArSinsEMdK6342uHurFEDR54/04fpIYW1LlJobOIYqs0NYiLAfYfrunNZ/C2Z\
            ilxm7drWY4HsY8wIrrrOPsZojUEn4pAZfebDrCCUkvMyaN2SXdCC1MhsmOKLb5J38Y8\
            LC11z8KWL+XdAhvRFxE7Q556rPeV/4WU4jaZcETmNd1yS7MQsWxHE+uCsXmiS7UerFP\
            MNv14+xSno/qc0WjmLIzhsJOnB5hYQW8t/Y5N8DbCkAo7JTlm3niVQPXz3RBSWG55oW\
            /X1l5TyRmNXB900v+nlovehqyheZcXaaljWx0NaiwYyt6uUEf7cUinFeEYjc0fsV6Yf\
            0/jrw+L5Ex6TEtSzKcTfv2lz6qUi7BSwvoUmEnQfqcZfamKyulJ+9662ZpFiKILi+Qu\
            iM0ucjMPw2pMF3BwqTnEqEMLc6qBH8+jnVOFDsrAbo79eiqJ2W2HXEyUWVrXG5KruFu\
            uVPuSXxuOMG/RA4rQtP8="
        file: alia.hpp
        skip_cleanup: true
        on:
          tags: true
          repo: tmadden/alia

    # The Emscripten job deploys the documentation.
    # (The isn't currently a full test. It just tests that the asm-dom examples
    # build successfully.)
    - env: CACHE_NAME=emscripten
      services:
      - docker
      script:
      - python scripts/generate-distributables.py
      - mv alia.hpp examples/asm-dom
      - mkdir examples/asm-dom/build
      - >
        docker run -it --name emscripten -v $(pwd)/examples/asm-dom:/src
        trzeci/emscripten:sdk-incoming-64bit -w /src/build
        bash -c 'emcmake cmake . && make'
      after_success:
      - scripts/build-docs.sh
      deploy:
      - provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        on:
          branch: master
        local_dir: html

before_cache:
- conan remove "*" -s -b -f
cache:
  directories:
  - $HOME/.conan/data
